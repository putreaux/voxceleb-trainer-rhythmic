
[componentInstances:cComponentManager]
instance[dataMemory].type=cDataMemory

;;; default source
[componentInstances:cComponentManager]
instance[dataMemory].type=cDataMemory

;;; source

\{\cm[source{?}:include external source]}

;;; main section

[componentInstances:cComponentManager]
instance[framer].type = cFramer
instance[lld].type = cPitchJitter
instance[shs].type = cPitchShs
instance[s_scale].type=cSpecScale
instance[windower].type=cWindower
instance[fft].type=cTransformFFT
instance[magphase].type=cFFTmagphase

[windower:cWindower]
reader.dmLevel=framer
writer.dmLevel=windower
gain=1.0
sigma=0.4

[fft:cTransformFFT]
reader.dmLevel=windower
writer.dmLevel=fft
zeroPadSymmetric = 1

[magphase:cFFTmagphase]
reader.dmLevel=fft
writer.dmLevel=magphase

[s_scale:cSpecScale]
reader.dmLevel=magphase
writer.dmLevel=s_scale
copyInputName = 1
processArrayFields = 0
scale=octave
sourceScale = lin
interpMethod = spline
minF = 25
maxF = -1
nPointsTarget = 0
specSmooth = 1
specEnhance = 1
auditoryWeighting = 1

[shs:cPitchShs]
reader.dmLevel=s_scale
writer.dmLevel=shs
F0raw = 1

[framer:cFramer]
reader.dmLevel = wave
writer.dmLevel = framer
copyInputName = 1
frameMode = fixed
frameSize = 0.032
frameStep = 0.016
frameCenterSpecial = left
noPostEOIprocessing = 1


[componentInstances:cComponentManager]
instance[lld].type = cPitchJitter

[lld:cPitchJitter]

reader.dmLevel = wave
writer.dmLevel = lld
F0reader.dmLevel = shs
F0field = F0raw
jitterLocal = 1
shimmerLocalDB = 1
jitterLocalEnv = 0
jitterDDPEnv = 0
shimmerLocal = 1
shimmerLocalEnv = 0
onlyVoiced = 0
logHNR = 1
inputMaxDelaySec = 0.5

;;; sink

\{\cm[sink{?}:include external sink]}

